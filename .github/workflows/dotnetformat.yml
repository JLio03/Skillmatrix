name: Format on slash command
on:
  issue_comment:
    types: [created]
jobs:
  dotnet-format:
    if: contains(github.event.comment.body, '/format')
    runs-on: windows-latest
    steps:
      - name: Get branch info
        id: comment-branch
        uses: xt0rted/pull-request-comment-branch@v1
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ steps.comment-branch.outputs.ref }}
          persist-credentials: false

      - name: Add cmi package Feeds
        uses: CMInformatik/ci-add-nuget-feed@master
        with:
          github-token: ${{ secrets.CMI_GITHUB_TOKEN }}

      - name: Apply all codeStyle of high severity
        id: format
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.CMI_GITHUB_TOKEN }}
        run: |
          mapfile -t changedFiles < <(gh pr view "${{ steps.comment-branch.outputs.ref }}" --json files -q '.files[].path' --repo $GITHUB_REPOSITORY | grep -E '\.(cs|csproj|sln|feature|sql|ps1)$')
          [[ ${#changedFiles[@]} -eq 0 ]] && exit 0 || echo "Detected changes in code"
          
          slnFile="$(find . -name *.sln | head -n1)"

          dotnet format style "$slnFile" --no-restore --severity error --include "${changedFiles[@]}"
          dotnet format analyzers "$slnFile" --no-restore --severity error --include "${changedFiles[@]}"

          rm -f ./NuGet.config
          
          ( [[ $(git diff --stat) != '' ]] && echo "hasChanges=true" >> "$GITHUB_OUTPUT") || echo ðŸ™„

      - name: Commit & Push changes
        if: steps.format.outputs.hasChanges == 'true'
        uses: actions-js/push@master
        with:
          github_token: ${{ secrets.CMI_GITHUBTOKEN_RW }}
          branch: ${{ steps.comment-branch.outputs.ref }}
          message: Autoformat
